#Resource for Secrets
apiVersion: v1
kind: Secret
metadata:
  name: mysql-Secret
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: VGVzdDEyMw==
  MYSQL_DATABASE: YmFua2FwcGRi

---
#Resource for Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  MYSQL_DATABASE: "bankappdb"

---
#Resource for Storage
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata: 
  name: ebs-sc
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  fstype: ext4
reclaimPolicy: Retain
volumeBindingMode: waitForFirstConsumer

---
#Reosource for Persistent Volmune Claim
apiVersion: v1 
kind: PersistenceVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  StorageClassName: ebs-sc
  resources:
    requests:
      storage: 5Gi

---
#Resource for mySql Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec: #defines config deployment
  selector: #def information to be deployed 
    matchLabels:  
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec: #defines config for the pod
      containers:
      - name: mysql
        image: mysql:8           
        env: 
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-Secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
          configMapKeyRef:
            name: mysql-config
            key: MYSQL_DATABASE
        ports:
        - containerPort: 3306
        volumeMounts:
        - mounthPath: /var/lib/mysql
          name: mysql-data
        resources:
          requests: #mininum request
            memory: "512Mi"
            cpu: "500m"
          limits: #maxium request   
            memory: "1Gi"
            cpu: "1"
      volumes:
      - name: mysql-data
        persistenceVolumeClaim:
          claimName: mysql-pvc    

---
#Reource for mysql Services
apiVersion: v1
kind: Service
metadata:
  name: mysql-Service
spec:
  ports:  
  - port: 3306 #port exposed by the service
    targetPort: 3306 #port open on the container
  selector:
    app: mysql  

---
#Resource for bankapp Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bankapp
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: bankapp
  template:  
    metadata:
      labels: bankapp
spec:  
  containers: 
  - name: bankapp
    image: castromeka/bankapp # image from my docker repo
    ports:
      - containerPort: 8080
    env:
    - name: SRING_DATASOURCE_URL
      value: jdbc:mysql://mysql-Service:3306/bankappdb?useSSL=false&serverTimezone=UTC #here bankapp can connect to mysql via [mysql-service] 
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql-Secret
          key: MYSQL_ROOT_PASSWORD
      resources:
        requests:
          memory: "500Mi"
          cpu: "500m"
        limits:
          memory: "1Gi"
          cpu: 1